server.port=8082

# ===============================
# APP CONFIGURATION
# ===============================
application.sender.numberThread=2
application.sender.threadPool=2
application.sender.sleep-duration=20
application.sender.maxQueue=100

application.processReg.numberThread=1
application.processReg.threadPool=1
application.processReg.sleep-duration=20
application.processReg.maxQueue=100

application.processCheck.numberThread=1
application.processCheck.threadPool=1
application.processCheck.sleep-duration=20
application.processCheck.maxQueue=100

application.processDel.numberThread=1
application.processDel.threadPool=1
application.processDel.sleep-duration=20
application.processDel.maxQueue=100

application.processGuide.numberThread=1
application.processGuide.threadPool=1
application.processGuide.sleep-duration=20
application.processGuide.maxQueue=100


# ===============================
# CHARGING API CONFIGURATION
# ===============================
# Can be set to false to disable security during local development
rest.security.enabled=true
rest.security.api-matcher=/api_gateway/**
rest.security.cors.allowed-origins=*
rest.security.cors.allowed-headers=*
rest.security.cors.allowed-methods=GET,POST,PUT,PATCH,DELETE,OPTIONS
rest.security.cors.max-age=3600

rest.security.issuer-uri=http://localhost:9090
security.oauth2.resource.id=oauth2_id
security.oauth2.resource.token-info-uri=${rest.security.issuer-uri}/oauth/token
security.oauth2.resource.user-info-uri=${rest.security.issuer-uri}/api_gateway/chargeRequest
security.oauth2.resource.jwt.key-value=-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4tW2IZn+axOw4ByqBGc4yWLcOUBBDiapKddgXdK5MWHpA8yqgmXsxXzwUHFIVTaCY9JvxpYyCkbaPA64nML1oHGxZ10qWzAyYSqFYnZGhZo6P83LDHqqB8Vuqbr5ZjU7EpUKv4+cWi1zE3D5WDsRfhkv+sLIGbd61OhFT7YBA5kBZe1zx8siP7YF6soiZZUAbcGMnN6idxsJr88ClAAiRiK0805U4nbmOUzsltXHsbMnS5Sl8AIFbjW0Sx0VluVQaraVvZj9VGbc634cVzNc7zErVYxfaFkdwd+iHqhEO0aqi7/fFlJE32Ou8DzWO1WIiteIRrBWi+g+aZlaCnLw0QIDAQAB\n-----END PUBLIC KEY-----

# To access another secured micro-service
security.oauth2.client.client-id=myclient
security.oauth2.client.client-secret=secret
security.oauth2.client.user-authorization-uri=${rest.security.issuer-uri}/api_gateway/chargeRequest
security.oauth2.client.access-token-uri=${rest.security.issuer-uri}/oauth/token
security.oauth2.client.scope=read
security.oauth2.client.grant-type=client_credentials



charging.url=http://localhost:9090/api_gateway/chargeRequest
charging.uri-auth=/authentication/auth
charging.uri-charge=/api_gateway/chargeRequest
charging.client-name=wsClient1
charging.user=wsClient1
charging.password=wsPassword123
charging.ws-management=accessMgt_ID
charging.alias.msisdn=_msisdn_
charging.alias.amount=_amount_
charging.alias.product=_offer_
charging.alias.transaction=_trans_
charging.alias.descripition=_descrpt_

# ===============================
# VIEW API CONFIGURATION
# ===============================
viewApi.url=http://127.0.0.1:9125
viewApi.uri-auth=/authentication/auth
viewApi.uri-view=/api/viewRequest
viewApi.client-name=flash_sms
viewApi.user=flash
viewApi.password=flash@123
viewApi.ws-management=viewinfo
viewApi.alias.msisdn=_msisdn_
viewApi.alias.descripition=_descrpt_



# ===============================
# KAFKA ZOOKEEPER
# ===============================
spring.kafka.zookeeper.host=10.124.160.67:2181
spring.kafka.topic.partitions=10
spring.kafka.topic.replication=2
spring.kafka.topic.session-timeOut-in-ms=2000
spring.kafka.topic.connection-timeOut-in-ms=2000


# ===============================
# KAFKA CONSUMER
# ===============================
#spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.bootstrap-servers= 10.124.160.67:9092,10.124.160.67:9093
spring.kafka.consumer.group-id= process-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.max-poll-records=500
spring.kafka.consumer.topic= mo-chocho

# ===============================
# KAFKA PRODUCER
# ===============================
#spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.bootstrap-servers= 10.124.160.67:9092,10.124.160.67:9093
spring.kafka.producer.group-id= process-producer-group
spring.kafka.producer.compression-type=none
spring.kafka.producer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.acks=all
spring.kafka.producer.linger.ms=100
spring.kafka.producer.batch.size=65536
spring.kafka.producer.compression-type=snappy
spring.kafka.producer.max-in-flight-requests-per-connection=1
spring.kafka.producer.retries=3
spring.kafka.producer.request-timeout-ms=15000
spring.kafka.producer.retry-backoff-ms=1000
spring.kafka.producer.partitioner-class=org.apache.kafka.clients.producer.internals.DefaultPartitioner
spring.kafka.producer.topic= mt-chocho

# ===============================
# LOGGING
# ===============================

logging.level.root=INFO
logging.file=log/full/full.log
logging.pattern.rolling-file-name=${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz
logging.pattern.console= %d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n

# ===============================
# DATABASE POOL
# ===============================

spring.datasource.tomcat.initial-size=15
spring.datasource.tomcat.max-wait=20000
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-idle=15
spring.datasource.tomcat.min-idle=8
spring.datasource.tomcat.default-auto-commit=true  

spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.idleTimeout=600000
spring.datasource.hikari.maxLifetime=1800000

spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.id.new_generator_mappings=false

# ===============================
# DATABASE H2
# ===============================
#spring.h2.console.enabled=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect


# ===============================
# DATABASE MARIADB
# ===============================

spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/springBootWeb
spring.datasource.username=olivier
spring.datasource.password=abc@1234


sping.flyway.enabled= true
sping.flyway.check-location = true
sping.flyway.locations = classpath:/db/migration

spring.flyway.baseline-on-migrate = true
#spring.flyway.baselineOnMigrate = true


# ===============================
# JPA / HIBERNATE MARIADB
# ===============================
 
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect


#------------------------------------------------------------------------------


# ===============================
# DATABASE MYSQL
# ===============================
 
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/mydatabase
#spring.datasource.username=root
#spring.datasource.password=12345
 
# ===============================
# JPA / HIBERNATE MYSQL
# ===============================
 
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

#------------------------------------------------------------------------------

# ===============================
# DATABASE  ORACLE
# ===============================
 
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:db12c
#spring.datasource.username=mydatabase
#spring.datasource.password=12345
  
# ===============================
# JPA / HIBERNATE ORACLE
# ===============================
 
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect

#------------------------------------------------------------------------------

# ===============================
# DATABASE SQL_SERVER
# ===============================
 
#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.datasource.url=jdbc:sqlserver://localhost\\SQLEXPRESS:1433;databaseName=mydatabase
#spring.datasource.username=sa
#spring.datasource.password=12345
 
 
# ===============================
# JPA / HIBERNATE SQL_SERVER
# ===============================
 
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect

#------------------------------------------------------------------------------

# ===============================
# DATABASE CONNECTION PostGres
# ===============================
 
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/mydatabase
#spring.datasource.username=postgres
#spring.datasource.password=12345
 
# ===============================
# JPA / HIBERNATE PostGres
# ===============================
 
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
 
 
# Fix Postgres JPA Error:
# Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

